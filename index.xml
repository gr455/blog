<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>grep -r on gr455.me/blog</title><link>https://gr455.me/blog/</link><description>Recent content in grep -r on gr455.me/blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 15 Aug 2021 18:24:22 +0530</lastBuildDate><atom:link href="https://gr455.me/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>GSoC '21 Testbench Project: Final Report</title><link>https://gr455.me/blog/post/gsoc_final/</link><pubDate>Sun, 15 Aug 2021 18:24:22 +0530</pubDate><guid>https://gr455.me/blog/post/gsoc_final/</guid><description>This blog post is a report of all my work done on the Testbench Project as a part of GSoC 2021 at CircuitVerse
About the Project CircuitVerse is a Digital Logic Simulator on web. It is an educational tool for students interested in electronics to simulate and make circuits on their browser.
My project is to implement a testbench to automatically test circuits against test cases. This will replace the existing testbench element in favor of more robust testbench which runs faster, supports sequential circuits and gives the user greater control over running tests.</description></item><item><title>GSoC Week 6, 7: Engine refactor and UI Improvements</title><link>https://gr455.me/blog/post/gsoc_week3/</link><pubDate>Thu, 05 Aug 2021 18:24:22 +0530</pubDate><guid>https://gr455.me/blog/post/gsoc_week3/</guid><description>Coding | Week 6 (July 17 - 23) This week I had planned to work on data part of the tests. Since we had decided for test data to be a part of the circuit data, that is what I started implementing. I had to change the save and load functions of circuits to also save and load the test data.
Apart from this, I also made some UI changes to make the UI more responsive and added a loadData function to the test creator, so that users can load the JSON data back to the creator to modify it.</description></item><item><title>GSoC Phase 1: Engine and UI</title><link>https://gr455.me/blog/post/gsoc_phase_1/</link><pubDate>Sat, 10 Jul 2021 18:24:22 +0530</pubDate><guid>https://gr455.me/blog/post/gsoc_phase_1/</guid><description>This blog is about my work in the first phase of Google Summer of Code 2021 with CircuitVerse
About the Project CircuitVerse is a Digital Logic Simulator on web. It is an educational tool for students interested in electronics to simulate and make circuits on their browser.
My project is to implement a testbench to automatically test circuits against test cases. This will replace the existing testbench element in favor of more robust testbench which runs faster, supports sequential circuits and gives the user greater control over running tests.</description></item><item><title>GSoC Week 2, 3: The Engine</title><link>https://gr455.me/blog/post/gsoc_week2/</link><pubDate>Mon, 28 Jun 2021 18:24:22 +0530</pubDate><guid>https://gr455.me/blog/post/gsoc_week2/</guid><description>This is the second installment in my blog series on Google Summer of Code 2021 with CircuitVerse
Coding | Week 2 (June 14 - 20) This week I had planned to focus on the testbench engine. Me and Satvik (the Mentor for this project) decided that the engine should consist of two modes:
RUNALL mode: In this mode, all the tests are run without any user interaction. For this, the engine takes control of the clock so that the speed is not limited by the clock time.</description></item><item><title>GSoC Week 1: The Beginning</title><link>https://gr455.me/blog/post/gsoc_week1/</link><pubDate>Tue, 15 Jun 2021 18:24:22 +0530</pubDate><guid>https://gr455.me/blog/post/gsoc_week1/</guid><description>I was selected for the Google Summer of Code &amp;lsquo;21 with CircuitVerse this year and this blog post and the ones following this will document my journey through the program.
CircuitVerse is a Digital Logic Simulator on web. It is an educational tool for students interested in electronics to simulate and make circuits on their browser. It also has features for professors to give assignments and grades.
My project is to implement a testbench to automatically test circuits against test cases.</description></item></channel></rss>